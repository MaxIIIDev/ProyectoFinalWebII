doctype html
html(lang="es")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Registro de Paciente
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css", rel="stylesheet")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css", rel="stylesheet")
    style.
      :root {
        --primary-color:rgb(206, 17, 232);
        --card-bg: #ffffff;
        --card-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
      }
      body {
        background:linear-gradient(100deg, rgb(0, 19, 54) 0%, rgb(0, 126, 223) 100%);
        font-family: 'Segoe UI', system-ui, sans-serif;
        height: 100vh
      }
      .card-form {
        border: none;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        overflow: hidden;
        max-width: 800px;
        margin: 0 auto;
      }
      .card-header {
        background: var(--primary-color);
        color: white;
        padding: 1.5rem;
        border-bottom: none;
      }
      .card-title {
        font-weight: 600;
        margin: 0;
      }
      .card-body {
        padding: 2rem;
        background: var(--card-bg);
      }
      .form-label {
        font-weight: 500;
        color: #495057;
        margin-bottom: 0.5rem;
      }
      .form-control, .form-select {
        border-radius: 8px;
        padding: 0.75rem 1rem;
        border: 1px solid #ced4da;
        transition: all 0.3s;
      }
      .form-control:focus, .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
      }
      .btn-primary {
        background-color: var(--primary-color);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
      }
      .age-badge {
        background-color: #e9ecef;
        color: #495057;
        font-weight: 500;
      }
      .invalid-feedback {
        font-size: 0.85rem;
      }
      .home-btn {
            position: absolute;
            top: 20px;
            left: 20px;
            background-color: white;
            color:rgb(0, 115, 255);
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        .home-btn:hover {
            transform: scale(1.1);
            background-color: #f8f9fa;
        }

  body
    include ../layout/alerts.pug
    .container.py-5
      a.home-btn(href="/enfermeria/view/paciente") 
        i.bi.bi-house-door-fill
      .card.card-form
        .card-header.text-center
          h3.card-title
            i.bi.bi-person-plus.me-2
            | Actualizar Paciente
        
        .card-body
          form#patientForm(action="/enfermeria/actualizar/paciente", method="POST")
            .row.g-3
              .col-md-6
                label.form-label(for="nombre") Nombre 
                input.form-control(type="text", id="nombre", name="nombre", required, value=paciente.nombre) 
              
              .col-md-6
                label.form-label(for="apellido") Apellido
                input.form-control(type="text", id="apellido", name="apellido", required, value=paciente.apellido)
                      
              .col-md-6
                label.form-label(for="fecha_nac") Fecha de Nacimiento
                - var fechaFormateada = paciente.fecha_nac ? paciente.fecha_nac.split('T')[0] : ''
                input.form-control(type="date", id="fecha_nac", name="fecha_nac", required, value=fechaFormateada)
                .invalid-feedback Fecha no válida
              
              .col-md-6
                label.form-label(for="edad") Edad
                .input-group
                  input.form-control(type="text", id="edad", name="edad", value=paciente.edad, readonly)
                  span.input-group-text.age-badge años
              
              .col-12
                label.form-label(for="direccion") Dirección
                input.form-control(type="text", id="direccion", name="direccion", required, value=paciente.direccion)
              
              .col-md-6
                label.form-label(for="telefono") Teléfono
                input.form-control(
                  type="tel", 
                  id="telefono", 
                  name="telefono", 
                  required, 
                  value=paciente.telefono, 
                  maxlength="10",
                  pattern="[0-9]{6,10}",
                  title="Ingrese entre 6 y 10 dígitos numéricos"
                )
                .invalid-feedback Ingrese entre 6 y 15 dígitos numéricos
                
              .col-md-6
                label.form-label(for="telefono_De_Emergencia") Teléfono de Emergencia
                input.form-control(
                  type="tel", 
                  id="telefono_emergencia", 
                  name="telefono_De_Emergencia", 
                  value=telefono_De_Emergencia|| "", 
                  maxlength="10",
                  pattern="[0-9]{6,10}",
                  title="Ingrese entre 6 y 10 dígitos numéricos"
                )
                .invalid-feedback Ingrese entre 6 y 15 dígitos numéricos || O borre el valor

            .d-flex.justify-content-end.mt-4
              button.btn.btn-primary(type="submit")
                i.bi.bi-check-circle.me-2
                | Guardar Registro

    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
    script.
      document.addEventListener('DOMContentLoaded', function() {
        // Función para calcular la edad basada en la fecha de nacimiento
        function calcularEdad(fechaNacimiento) {
          const hoy = new Date();
          const fechaNac = new Date(fechaNacimiento);
          
          let edad = hoy.getFullYear() - fechaNac.getFullYear();
          const mes = hoy.getMonth() - fechaNac.getMonth();
          
          if (mes < 0 || (mes === 0 && hoy.getDate() < fechaNac.getDate())) {
            edad--;
          }
          
          return edad;
        }

        // Escuchar cambios en el campo de fecha de nacimiento
        document.getElementById('fecha_nac').addEventListener('change', function() {
          const fechaNacimiento = this.value;
          
          if (fechaNacimiento) {
            const edad = calcularEdad(fechaNacimiento);
            document.getElementById('edad').value = edad;
            
            // Validación adicional para fechas futuras
            const hoy = new Date();
            const fechaSeleccionada = new Date(fechaNacimiento);
            
            if (fechaSeleccionada > hoy) {
              this.setCustomValidity('La fecha no puede ser futura');
              this.classList.add('is-invalid');
            } else {
              this.setCustomValidity('');
              this.classList.remove('is-invalid');
            }
          }
        });

        // Calcular la edad al cargar la página si ya hay un valor
        const fechaNacimientoInput = document.getElementById('fecha_nac');
        if (fechaNacimientoInput.value) {
          const edad = calcularEdad(fechaNacimientoInput.value);
          document.getElementById('edad').value = edad;
        }

        // Validación del formulario
        const form = document.getElementById('patientForm');
        form.addEventListener('submit', function(event) {
          let isValid = true;
          const requiredFields = form.querySelectorAll('[required]');
          
          requiredFields.forEach(field => {
            if (!field.value.trim()) {
              field.classList.add('is-invalid');
              isValid = false;
            }
          });
          
          if (!isValid) {
            event.preventDefault();
          }
        });
      });